{"version":3,"sources":["components/TextBox.js","components/Signature.js","App.js","serviceWorker.js","index.js"],"names":["TextBox","props","className","name","type","value","onChange","Signature","cellSpacing","cellPadding","border","style","borderRight","padding","verticalAlign","valign","href","target","width","height","src","alt","maxHeight","display","paddingLeft","paddingBottom","fontFamily","fontSize","color","fontWeight","title","phone","replace","textDecoration","email","App","useState","state","setState","event","onSubmit","preventDefault","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bbb6b185.chunk.js","sourcesContent":["import React from 'react';\n\nfunction TextBox(props) {\n  return (\n    <input className='form-control'\n      name={props.name}\n      type='text'\n      value={props.value}\n      onChange={props.onChange} />\n  );\n}\n\nexport default TextBox;","import React from 'react';\n\nfunction Signature(props) {\n  return (\n    <table cellSpacing={0} cellPadding={0} border={0}>\n      <tbody>\n        <tr>\n          <td style={{ borderRight: '2px solid #231f20', padding: '0 10px 0 5px', verticalAlign: 'middle' }} valign=\"middle\">\n            <a href=\"https://innablr.com.au\" target=\"_blank\"><img width={72} height={86} src=\"https://www.innablr.com.au/signature-logos/innablr.gif\" alt=\"Innablr\" style={{ maxHeight: '86px', width: 'auto !important', display: 'block', border: 'none' }} /></a>\n          </td>\n          <td style={{ verticalAlign: 'middle', paddingLeft: '10px' }}>\n            <table cellSpacing={0} cellPadding={0} border={0}>\n              <tbody>\n                <tr>\n                  <td style={{ paddingBottom: '0px', fontFamily: 'Verdana', fontSize: '9pt', color: '#231f20' }}>\n                    <font style={{ fontWeight: 'bold', fontFamily: 'Verdana', fontSize: '9pt', color: '#231f20' }}>{props.name}</font>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ paddingBottom: '5px', fontFamily: 'Verdana', fontSize: '9pt', color: '#231f20' }}>\n                    <font style={{ fontFamily: 'Verdana', fontSize: '9pt', color: '#231f20' }}>{props.title}</font>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ paddingBottom: '0px', fontFamily: 'Verdana', fontSize: '9pt' }}>\n                    <font style={{ color: '#333333', fontSize: '9pt', fontFamily: 'Verdana' }}><b>m.</b> <a href={'tel:' + props.phone.replace(/ /g, '')} style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\">{props.phone}</a></font>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ paddingBottom: '0px', fontFamily: 'Verdana', fontSize: '9pt' }}>\n                    <font style={{ color: '#333333', fontSize: '9pt', fontFamily: 'Verdana' }}><b>e.</b> <a href={'mailto:' + props.email} style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\">{props.email}</a></font>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ paddingBottom: '5px', fontFamily: 'Verdana', fontSize: '9pt' }}>\n                    <font style={{ color: '#333333', fontSize: '9pt', fontFamily: 'Verdana' }}><b>w.</b> <a href=\"https://innablr.com.au\" style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\">innablr.com.au</a></font>\n                  </td>\n                </tr>\n                <tr>\n                  <td style={{ paddingBottom: '0px', fontFamily: 'Verdana', fontSize: '9pt' }}>\n                    <table cellSpacing={0} cellPadding={0} border={0}>\n                      <tbody>\n                        <tr>\n                          <td style={{ padding: '0 2px 0 0' }}>\n                            <a href=\"https://www.linkedin.com/company/innablr\" style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\"><img src=\"https://www.innablr.com.au/signature-logos/linkedin.png\" alt=\"LinkedIn\" width={12} height={12} style={{ maxHeight: '12px', width: 'auto !important', display: 'block', border: 'none' }} /></a>\n                          </td>\n                          <td style={{ padding: '1px 2px 0 2px' }}>\n                            <a href=\"https://twitter.com/InnablrTech\" style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\"><img src=\"https://www.innablr.com.au/signature-logos/twitter.png\" alt=\"Twitter\" width={13} height={11} style={{ maxHeight: '11px', width: 'auto !important', display: 'block', border: 'none' }} /></a>\n                          </td>\n                          <td style={{ padding: '0 2px' }}>\n                            <a href=\"https://www.facebook.com/InnablrTech\" style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\"><img src=\"https://www.innablr.com.au/signature-logos/facebook.png\" alt=\"Facebook\" width={6} height={12} style={{ maxHeight: '12px', width: 'auto !important', display: 'block', border: 'none' }} /></a>\n                          </td>\n                          <td style={{ padding: '0 2px' }}>\n                            <a href=\"https://goo.gl/maps/GtZMJSCMsuu\" style={{ color: '#6244bb', textDecoration: 'none' }} target=\"_blank\"><img src=\"https://www.innablr.com.au/signature-logos/pin.png\" alt=\"Map\" width={7} height={12} style={{ maxHeight: '12px', width: 'auto !important', display: 'block', border: 'none' }} /></a>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n};\n\nexport default Signature;","import React, { useState } from \"react\";\nimport TextBox from \"./components/TextBox\"\nimport Signature from \"./components/Signature\"\nimport './App.css';\n\nfunction App({ name, title, email, phone }) {\n  const [state, setState] = useState({\n    name:  name  || 'John Doe',\n    title: title || 'Engineer',\n    email: email || 'john.doe@innablr.com.au',\n    phone: phone || '+61 435 123 456'\n  });\n\n  const onChange = (event) => {\n    const {name, value} = event.target\n    setState({...state, [name]: value})\n}\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <TextBox name='name' value={state.name} onChange={onChange} />\n      <TextBox name='title' value={state.title} onChange={onChange} />\n      <TextBox name='email' value={state.email} onChange={onChange} />\n      <TextBox name='phone' value={state.phone} onChange={onChange} />\n      <hr />\n      <Signature name={state.name} title={state.title} email={state.email} phone={state.phone} />\n    </form>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}